// qs=Detect and Remove Loop

// algo=floyd used

// link=https://www.codingninjas.com/codestudio/problems/interview-shuriken-42-detect-and-remove-loop_241049?leftPanelTab=0&campaign=YouTube_codestudio_lovebabbar28thjan&utm_source=youtube&utm_medium=affiliate&utm_campaign=YouTube_codestudio_lovebabbar28thjan




// /*************************************************

//     class Node {
//         public :

//         int data;
//         Node *next;

//         Node(int data) {
//             this -> data = data;
//             this -> next = NULL;
//         }
//     };

// *************************************************/
// Node *floydDetectLoop(Node *head) // provides intersection point in a loop
// {
//     if (head == NULL)
//         return NULL;
//     Node *slow = head;
//     Node *fast = head;
//     while (slow != NULL && fast != NULL)
//     {
//         fast = fast->next;
//         if (fast != NULL)
//         {
//             fast = fast->next;
//         }
//         slow = slow->next;
//         if (slow == fast)
//         {
//             return slow;
//         }
//     }
//     return NULL;
// }
// Node *getStartingNode(Node *head)
// {
//     if (head == NULL)
//         return NULL;
//     Node *intersection = floydDetectLoop(head);
//     if(intersection==NULL) return NULL;
//     Node *slow = head;
//     while (slow != intersection)
//     {
//         slow = slow->next;
//         intersection = intersection->next;
//     }
//     return slow;
// }
// Node *removeLoop(Node *head) {
//   // Write your code here.
//   if (head == NULL)
//     return NULL;
//   Node *startNode = getStartingNode(head);
//   if(startNode==NULL)return head;
//   Node *temp = startNode;
//   while (temp->next != startNode) {
//     temp = temp->next;
//   }
//   temp->next = NULL;
//   return head;
// }